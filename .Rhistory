library(devtools)
use_r(simulate_games)
use_r("simulate_games")
load_all()
cards <- make_n_cards(10)
cards
cards %>%
purrr::list_rbind()
cards %>%
purrr::list_rbind()
document()
install.packages("roxygen")
load_all()
document
document()
load_all()
library(devtools)
load_all()
use_package("magrittr")
load_all()
document()
document()
install.packages("roxygen")
install.packages("roxygen2")
library(devtools)
load_all()
use_package("dplyr")
use_package("purrr")
cards %>%
purrr::list_rbind()
cards %>%
purrr::list_rbind() %>%
tidyr::pivot_longer(cols = everything())
?sample
all_cards <- cards %>%
purrr::list_rbind()
spaces <- all_cards %>%
tidyr::pivot_longer(cols = everything()) %>%
mutate(space = paste(name, value, spep = "-")) %>%
pull()
library(dplyr)
spaces <- all_cards %>%
tidyr::pivot_longer(cols = everything()) %>%
mutate(space = paste(name, value, spep = "-")) %>%
pull()
spaces_order <- sample(spaces, size = length(spaces))
spaces <- all_cards %>%
tidyr::pivot_longer(cols = everything()) %>%
mutate(space = paste(name, value, spep = "-")) %>%
pull() %>%
unique()
spaces_order <- sample(spaces, size = length(spaces))
# Divide by 5 and take the ceiling to get the number of rounds
rounds <- ceiling(length(spaces_order) / 5)
spaces <- all_cards %>%
tidyr::pivot_longer(cols = everything()) %>%
mutate(space = paste(name, value, sep = "-")) %>%
pull() %>%
unique()
spaces_order <- sample(spaces, size = length(spaces))
# Divide by 5 and take the ceiling to get the number of rounds
rounds <- ceiling(length(spaces_order) / 5)
rounds
spaces_grid <- data.frame(
b = 1:rounds,
i = 1:rounds + rounds
)
spaces_grid
spaces_grid <- data.frame(
b = 1:rounds,
i = 1:rounds + rounds,
n = 1:rounds + rounds * 2,
g = 1:rounds + rounds * 3,
o = 1:rounds + rounds * 4
)
spaces_grid
cards[[1]]
?split
drawn <- spaces[1:20]
card <- cards[[3]]
cols <- split(card, seq(nrow(card)))
cols
as.list(card)
card
diagnals <- list(
c(card[1, 1], card[2, 2], card[3, 3], card[4, 4], card[5, 5]),
c(card[1, 5], card[2, 4], card[3, 3], card[4, 2], card[5, 1])
)
diagnals
drawn
stringr::str_extract(spaces_order, "\\d+")
spaces_order
?stringr::str_extract
stringr::str_extract(spaces_order, "\d+")
stringr::str_extract(spaces_order, "\\d")
cols <- split(card, seq(nrow(card)))
rows <- as.list(card)
diagnals <- list(
c(card[1, 1], card[2, 2], card[3, 3], card[4, 4], card[5, 5]),
c(card[1, 5], card[2, 4], card[3, 3], card[4, 2], card[5, 1])
)
c(cols, rows, diagnals)
c(cols, rows, diagnals) %>%
purrr::map(~all(. %in% drawn))
c(cols, rows, diagnals) %>%
purrr::map(~all(. %in% drawn)) %>%
any()
c(cols, rows, diagnals) %>%
purrr::map_lgl(~all(. %in% drawn)) %>%
any()
c(cols, rows, diagnals) %>%
purrr::map_lgl(~all(. %in% drawn))
